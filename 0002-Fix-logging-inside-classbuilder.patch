From ac120751f356a60d45d17d6f896fbbbd6fa4f8ac Mon Sep 17 00:00:00 2001
From: Alex Chmykhalo <alex.chmykhalo@vakoms.com.ua>
Date: Thu, 6 Nov 2014 17:23:09 +0000
Subject: [PATCH] Fix logging inside classbuilder

---
 python_jsonschema_objects/classbuilder.py | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/python_jsonschema_objects/classbuilder.py b/python_jsonschema_objects/classbuilder.py
index c542060..2899b97 100644
--- a/python_jsonschema_objects/classbuilder.py
+++ b/python_jsonschema_objects/classbuilder.py
@@ -8,7 +8,6 @@ import six
 import logging
 logger = logging.getLogger(__name__)
 
-
 class ProtocolBase( collections.MutableMapping):
     __propinfo__ = {}
     __required__ = set()
@@ -65,7 +64,7 @@ class ProtocolBase( collections.MutableMapping):
         for prop in props:
 
             try:
-              logging.debug("Setting value for '{0}' to {1}"
+              logger.debug("Setting value for '{0}' to {1}"
                             .format(prop, props[prop]))
               setattr(this, prop, props[prop])
             except validators.ValidationError as e:
@@ -329,13 +328,13 @@ class ClassBuilder(object):
                     clsdata['type'], (ProtocolBase, LiteralValue)):
                 # It's possible that this reference was already resolved, in which
                 # case it will have its type parameter set
-                logging.debug("Using previously resolved type "
+                logger.debug("Using previously resolved type "
                               "(with different URI) for {0}".format(uri))
                 self.resolved[uri] = clsdata['type']
             elif uri in self.resolved:
-                logging.debug("Using previously resolved object for {0}".format(uri))
+                logger.debug("Using previously resolved object for {0}".format(uri))
             else:
-                logging.debug("Resolving object for {0}".format(uri))
+                logger.debug("Resolving object for {0}".format(uri))
 
                 with self.resolver.resolving(uri) as resolved:
                     self.resolved[uri] = self._build_object(
-- 
2.1.3

